[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "enhanced-rag"
version = "1.0.0"
description = "Production-ready Retrieval-Augmented Generation system"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Enhanced RAG Team", email = "team@enhanced-rag.com"}
]
keywords = ["rag", "llm", "ai", "nlp", "retrieval", "generation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "pydantic>=2.0.0,<3.0.0",
    "click>=8.1.0,<9.0.0",
    "PyYAML>=6.0,<8.0.0",
    "python-multipart>=0.0.6",
    "faiss-cpu>=1.7.4,<2.0.0",
    "numpy>=1.24.0,<2.0.0",
    "scikit-learn>=1.3.0,<2.0.0",
    "fastapi>=0.104.0,<1.0.0",
    "uvicorn>=0.24.0,<1.0.0",
    "httpx>=0.25.0,<1.0.0",
    "aiohttp>=3.9.0,<4.0.0",
    "openai>=1.3.0,<2.0.0",
    "anthropic>=0.7.0,<1.0.0",
    "pypdf>=3.17.0,<4.0.0",
    "python-docx>=1.1.0,<2.0.0",
    "python-magic>=0.4.27,<1.0.0",
    "redis>=5.0.0,<6.0.0",
    "diskcache>=5.6.0,<6.0.0",
    "prometheus-client>=0.19.0,<1.0.0",
    "structlog>=23.2.0,<24.0.0",
    "rich>=13.7.0,<14.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "tenacity>=8.2.0,<9.0.0",
    "xxhash>=3.4.0,<4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "black>=23.12.0,<24.0.0",
    "isort>=5.13.0,<6.0.0",
    "flake8>=6.1.0,<7.0.0",
    "mypy>=1.8.0,<2.0.0",
    "pre-commit>=3.6.0,<4.0.0",
    "jupyter>=1.0.0,<2.0.0",
]

gpu = [
    "faiss-gpu>=1.7.4,<2.0.0",
    "torch>=2.1.0",
    "transformers>=4.36.0",
]

cloud = [
    "boto3>=1.34.0,<2.0.0",
    "azure-storage-blob>=12.19.0,<13.0.0",
    "google-cloud-storage>=2.13.0,<3.0.0",
]

[project.urls]
Homepage = "https://github.com/enhanced-rag/enhanced-rag"
Documentation = "https://enhanced-rag.readthedocs.io"
Repository = "https://github.com/enhanced-rag/enhanced-rag"
Issues = "https://github.com/enhanced-rag/enhanced-rag/issues"

[project.scripts]
enhanced-rag = "enhanced_rag.api.cli:cli"
rag-server = "enhanced_rag.api.rest:run_server"

[tool.setuptools.packages.find]
include = ["enhanced_rag*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
enhanced_rag = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["enhanced_rag"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "faiss.*",
    "redis.*",
    "prometheus_client.*",
    "anthropic.*",
    "openai.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--cov=enhanced_rag",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
    "-v"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["enhanced_rag"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]